name: Build Windows Executable with Cairo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      
    - name: Install Chocolatey dependencies
      shell: powershell
      run: |
        # Ensure Chocolatey is up to date
        if (Test-Path "$env:ProgramData\chocolatey\bin\choco.exe") {
          choco upgrade chocolatey -y
        } else {
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        }
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        
    - name: Install Cairo and dependencies
      shell: powershell
      run: |
        # Install latest available cairo version
        choco install cairo -y
        choco install pkgconfiglite -y
        
        # Verify installation and find actual DLL paths
        $cairoPath = (Get-Command libcairo-2.dll).Source
        if (-not $cairoPath) {
          throw "Cairo installation failed - libcairo-2.dll not found"
        }
        $cairoDir = [System.IO.Path]::GetDirectoryName($cairoPath)
        echo "Cairo DLLs found at: $cairoDir"
        echo "$cairoDir" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Create and activate venv
      run: |
        python -m venv venv
        venv\Scripts\activate
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable with PyInstaller
      shell: powershell
      run: |
        venv\Scripts\activate
        
        # Get the actual Cairo DLL path
        $cairoPath = (Get-Command libcairo-2.dll).Source
        $cairoDir = [System.IO.Path]::GetDirectoryName($cairoPath)
        
        # Build with explicit DLL paths
        pyinstaller --onefile --name AmazonOrderProcessor `
          --collect-all selenium `
          --collect-all webdriver_manager `
          --collect-all cairosvg `
          --collect-all lxml `
          --collect-all PIL `
          --add-binary "$cairoDir\libcairo-2.dll;." `
          --add-binary "$cairoDir\libpng16-16.dll;." `
          --add-binary "$cairoDir\zlib1.dll;." `
          --add-data "amazon_cookies.pkl;." `
          --add-data "amazon_session_info.json;." `
          Amazon_seller_selenium.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: AmazonOrderProcessor
        path: dist/AmazonOrderProcessor.exe
