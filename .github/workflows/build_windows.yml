name: Build on Windows with Webdriver-Manager

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      shell: pwsh
      run: |
        # Install Chocolatey (falls benötigt)
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # Install MSYS2 für Cairo (falls benötigt)
        choco install -y msys2
        echo "C:\tools\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Upgrade pip and install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build EXE with PyInstaller
      shell: pwsh
      run: |
        # Einzeiliger PyInstaller-Befehl (keine Backticks ` in PowerShell!)
        pyinstaller --onefile --add-data "amazon_cookies.pkl;." --add-data "amazon_session_info.json;." --add-binary "cairo_dlls\*.dll;." --hidden-import cairocffi --hidden-import cairosvg --hidden-import cairocffi._ffi --hidden-import webdriver_manager --collect-all webdriver_manager Amazon_seller_selenium.py

    - name: Upload EXE as artifact
      uses: actions/upload-artifact@v4
      with:
        name: amazon-seller-exe
        path: dist/*.exe
