name: Build Windows Executable with Cairo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install GTK3 (includes Cairo)
      shell: powershell
      run: |
        # Install GTK3 which includes Cairo
        choco install gtksharp -y
        # Add GTK3 bin directory to PATH (where Cairo DLLs are located)
        $gtkPath = "C:\Program Files\GtkSharp\2.12\bin"
        if (Test-Path $gtkPath) {
          echo "$gtkPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        } else {
          throw "GTK installation failed - path not found"
        }

    - name: Install pkg-config
      shell: powershell
      run: |
        choco install pkgconfiglite -y

    - name: Create and activate venv
      run: |
        python -m venv venv
        venv\Scripts\activate

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable with PyInstaller
      shell: powershell
      run: |
        venv\Scripts\activate
        pyinstaller --onefile --name AmazonOrderProcessor `
          --collect-all selenium `
          --collect-all webdriver_manager `
          --collect-all cairosvg `
          --collect-all lxml `
          --collect-all PIL `
          --add-binary "C:\Program Files\GtkSharp\2.12\bin\libcairo-2.dll;." `
          --add-binary "C:\Program Files\GtkSharp\2.12\bin\libpng16-16.dll;." `
          --add-binary "C:\Program Files\GtkSharp\2.12\bin\zlib1.dll;." `
          --add-data "amazon_cookies.pkl;." `
          --add-data "amazon_session_info.json;." `
          Amazon_seller_selenium.py

    - name: Verify DLLs are included
      shell: powershell
      run: |
        if (-not (Test-Path "dist\AmazonOrderProcessor.exe")) {
          throw "Executable not found!"
        }
        # Check file size as a basic verification
        $fileSize = (Get-Item "dist\AmazonOrderProcessor.exe").Length
        if ($fileSize -lt 5MB) {
          throw "Executable seems too small - likely missing dependencies"
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: AmazonOrderProcessor
        path: dist/AmazonOrderProcessor.exe
